// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"1.2"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var b=a.length-1;0<b;b--){var c=Math.floor(PNLTRI.Math.random()*(b+1)),d=a[b];a[b]=a[c];a[c]=d}return a},ptsCrossProd:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.idNextPolyChain=0;this.PolyLeftArr=[];this.monoSubPolyChains=[];this.triangles=[];if(a)for(var b=0,c=a.length;b<c;b++)this.addPolygonChain(a[b])};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getFirstSegment:function(){return this.segments[0]},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},nbPolyChains:function(){return this.idNextPolyChain},get_PolyLeftArr:function(){return this.PolyLeftArr.concat()},set_PolyLeft_wrong:function(a){this.PolyLeftArr[a]=!1},compare_pts_yx:function(a,b){var c=a.y-b.y;if(c>PNLTRI.Math.EPSILON_P)return 1;
if(c<PNLTRI.Math.EPSILON_N)return-1;c=a.x-b.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},isClockWise:function(a){var b=a,c=0;do c+=(b.vFrom.x-b.vTo.x)*(b.vFrom.y+b.vTo.y),b=b.snext;while(b!=a);return 0>c},appendVertexEntry:function(a){a=a?a:{x:null,y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,b){return{chainId:this.idNextPolyChain,vFrom:a,vTo:b,upward:1==this.compare_pts_yx(b,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);
0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a){function b(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}for(var c=[],d,e,h,g=0;g<a.length;g++)d=this.appendVertexEntry({x:a[g].x,y:a[g].y}),e=!0,h=c.length-1,0<=h&&b(d,c[h])&&(e=!1),e&&c.push(d);1<c.length&&b(c[c.length-1],c[0])&&c.pop();return c},addPolygonChain:function(a){a=this.addVertexChain(a);if(3>a.length)return console.log("Polygon has < 3 vertices!",
a),0;for(var b=this.segments.length,c,d,e,h=0;h<a.length-1;h++)c=this.createSegmentEntry(a[h],a[h+1]),e?(c.sprev=e,e.snext=c):d=c,e=c,this.appendSegmentEntry(c);c=this.createSegmentEntry(a[a.length-1],a[0]);c.sprev=e;e.snext=c;this.appendSegmentEntry(c);d.sprev=c;c.snext=d;this.PolyLeftArr[this.idNextPolyChain++]=!0;return this.segments.length-b},reverse_polygon_chain:function(a){this.set_PolyLeft_wrong(a.chainId);var b,c=a;do b=c.snext,c.snext=c.sprev,c.sprev=b,b=c.vTo,c.vTo=c.vFrom,c.vFrom=b,c.upward=
!c.upward,c=c.sprev;while(c!=a)},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,b){var c=b?b:{segOut:null,vertTo:null};a.outSegs.push(c);return c},splitPolygonChain:function(a,b,c,d){function e(a,b){for(var c,d,e=null,g=4,h=0;h<a.outSegs.length;h++){c=
a.outSegs[h];var k=c.vertTo;d=k.x-a.x;var k=k.y-a.y,t=b.x-a.x,n=b.y-a.y,v=(d*t+k*n)/Math.sqrt(d*d+k*k)/Math.sqrt(t*t+n*n);(d=0<=d*n-t*k?1-v:3+v)<g&&(g=d,e=c)}return e}var h,g;h=e(b,c);g=e(c,b);h=h.segOut;var k=g.segOut;g=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!0,mprev:h.mprev,mnext:k});var n=this.appendSegmentEntry({vFrom:c,vTo:b,upward:!1,mprev:k.mprev,mnext:h});this.appendVertexOutsegEntry(b,{segOut:g,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:n,vertTo:b});h.mprev.mnext=g;k.mprev.mnext=
n;h.mprev=n;k.mprev=g;b=this.monoSubPolyChains.length;d?(this.monoSubPolyChains[a]=g,this.monoSubPolyChains[b]=n):(this.monoSubPolyChains[a]=n,this.monoSubPolyChains[b]=g);return b},unique_monotone_chains_max:function(){var a,b,c,d,e,h;for(h=0;h<this.segments.length;h++)this.segments[h].marked=!1;var g=[];for(h=0;h<this.monoSubPolyChains.length;h++){a=b=this.monoSubPolyChains[h];d=e=a.vFrom;a.marked=!0;a=a.mnext;for(var k=!1;(c=a.vFrom)!=d;){if(a.marked){k=!0;break}else a.marked=!0;1==this.compare_pts_yx(c,
e)&&(e=c,b=a);a=a.mnext}k||g.push(b)}return g},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,b,c){this.triangles.push([a.id,b.id,c.id])}};PNLTRI.EarClipTriangulator=function(a){this.polyData=a};
PNLTRI.EarClipTriangulator.prototype={constructor:PNLTRI.EarClipTriangulator,triangulate_polygon_no_holes:function(){var a=this.polyData,b=a.getFirstSegment(),c=b;if(a.isClockWise(b)){do c.mprev=c.snext,c=c.mnext=c.sprev;while(c!=b);a.set_PolyLeft_wrong(0)}else{do c.mprev=c.sprev,c=c.mnext=c.snext;while(c!=b)}for(b=a=b;a.mnext!=a.mprev;){a:{var c=a.mprev.vFrom.x,d=a.mprev.vFrom.y,e=a.vFrom.x,h=a.vFrom.y,g=a.mnext.vFrom.x,k=a.mnext.vFrom.y,n=g-e,p=k-h,q=c-g,u=d-k,f=e-c,m=h-d;if(PNLTRI.Math.EPSILON_P>
f*p-n*m)c=!1;else{for(var l=a.mprev.mprev,s=a.mnext;s!=l;){var s=s.mnext,r=s.vFrom.x,t=s.vFrom.y,w=r-c,v=t-d;if(0!=w||0!=v){var x=r-e,y=t-h;if(0!=x||0!=y)if(r-=g,t-=k,(0!=r||0!=t)&&n*y-p*x>=PNLTRI.Math.EPSILON_N&&f*v-m*w>=PNLTRI.Math.EPSILON_N&&q*t-u*r>=PNLTRI.Math.EPSILON_N){c=!1;break a}}}c=!0}}if(c)this.polyData.addTriangle(a.mprev.vFrom,a.vFrom,a.mnext.vFrom),a.mprev.mnext=a.mnext,a.mnext.mprev=a.mprev,b=a=a.mnext;else if(a=a.mnext,a==b)return!1}return!0}};PNLTRI.trapCnt=0;PNLTRI.Trapezoid=function(a,b,c,d){this.trapID=PNLTRI.trapCnt++;this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=b?b:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.dL=this.dL;a.dR=this.dR;a.sink=this.sink;return a},setAbove:function(a,b){this.uL=a;this.uR=b},setBelow:function(a,b){this.dL=a;this.dR=b},splitOffLower:function(a){var b=this.clone();this.vLow=b.vHigh=a;this.setBelow(b,null);b.setAbove(this,null);b.dL&&(b.dL.uL=b);b.dR&&(b.dR.uR=b);return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;
PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.QsNode=function(a){this.nodetype=PNLTRI.T_SINK;this.trap=a;a.sink=this};PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode};PNLTRI.QueryStructure=function(a){PNLTRI.trapCnt=0;var b=new PNLTRI.Trapezoid(null,null,null,null);this.root=new PNLTRI.QsNode(b);this.trapArray=[b];if(a){for(var b=a.getSegments(),c=0;c<b.length;c++)b[c].rootFrom=b[c].rootTo=this.root,b[c].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=PNLTRI.PolygonData.prototype.compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},cloneTrap:function(a){a=a.clone();this.trapArray.push(a);return a},splitNodeAtPoint:function(a,b,c){var d=a.trap;if(d.vHigh==b||d.vLow==b)return a;var e=d.splitOffLower(b);this.trapArray.push(e);a.nodetype=PNLTRI.T_Y;a.yval=b;a.trap=null;a.right=new PNLTRI.QsNode(d);a.left=new PNLTRI.QsNode(e);return c?d.sink:e.sink},fpEqual:function(a,b){return Math.abs(a-b)<PNLTRI.Math.EPSILON_P},is_left_of:function(a,
b,c){c=a.vFrom.x-b.x;var d=a.vTo.x-b.x;if(Math.abs(a.vTo.y-b.y)<PNLTRI.Math.EPSILON_P)a=d,b=c;else if(Math.abs(a.vFrom.y-b.y)<PNLTRI.Math.EPSILON_P)a=c,b=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,b):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,b);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(b)<PNLTRI.Math.EPSILON_P?0:b:a},ptNode:function(a,b,c){var d,e=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:d=a;d==c.yval&&(d=b);d=this.compare_pts_yx(d,c.yval);-1==d&&(e=
!1);break;case PNLTRI.T_X:if(a==c.seg.vFrom||a==c.seg.vTo){if(this.fpEqual(a.y,b.y)){b.x<a.x&&(e=!1);break}else d=this.is_left_of(c.seg,b,!1),0<d?e=!1:0==d&&(e=a==c.seg.vFrom?!0:!1);break}else d=this.is_left_of(c.seg,a,!0),0<d?e=!1:0==d&&(e=!0);break;default:console.log("ptNode: undef. NodeType: ",c.nodetype)}return e?this.ptNode(a,b,c.right):this.ptNode(a,b,c.left)},add_segment:function(a){function b(){var a=f.uL||f.uR;a.dL&&a.dR?f==a.dR?(m.setAbove(null,null),l.setAbove(null,a),a.setBelow(a.dL,
l)):(l.setAbove(null,null),m.setAbove(a,null),a.setBelow(m,a.dR)):(m.setAbove(a,null),l.setAbove(null,a),a.setBelow(m,l))}function c(a){f.vLow==u.vLow&&q?f.dL?(m.setBelow(a,null),l.setBelow(null,null),a.setAbove(m,a.uR)):(l.setBelow(null,a),m.setBelow(null,null),a.setAbove(a.uL,l)):(a.uL&&a.uR?a.uL==f?(a.usave=a.uR,a.uside=PNLTRI.S_LEFT,m.setBelow(a,null),l.setBelow(a,null)):(a.usave=a.uL,a.uside=PNLTRI.S_RIGHT,m.setBelow(null,a),l.setBelow(null,a)):f.vLow==u.vLow?(m.setBelow(a,null),l.setBelow(null,
a)):(m.setBelow(null,a),l.setBelow(a,null)),a.setAbove(m,l))}function d(){var b;f.vLow==u.vLow&&q?(f.dL.setAbove(m,null),f.dR.setAbove(null,l),b=f.dR,m.setBelow(f.dL,null),l.setBelow(null,b),b=null):0<e.is_left_of(a,f.vLow,!0)?(b=f.dR,f.dL.setAbove(m,null),f.dR.setAbove(m,l),m.setBelow(f.dL,f.dR),l.setBelow(null,f.dR)):(b=f.dL,f.dL.setAbove(m,l),f.dR.setAbove(null,l),l.setBelow(f.dL,f.dR),m.setBelow(f.dL,null));return b}var e=this,h,g,k,n,p,q;a.upward?(n=a.vFrom,h=a.vTo,p=a.rootFrom,g=a.rootTo,q=
a.sprev.is_inserted,k=a.snext.is_inserted):(n=a.vTo,h=a.vFrom,p=a.rootTo,g=a.rootFrom,q=a.snext.is_inserted,k=a.sprev.is_inserted);g=this.ptNode(h,n,g);k||(g=this.splitNodeAtPoint(g,h,!1));k=g.trap;if(k.uL||k.uR){g=this.ptNode(n,h,p);q||(g=this.splitNodeAtPoint(g,n,!0));var u=g.trap,f=k,m,l,s,r;for(h=this.trapArray.length+2;f;){if(0>--h){console.log("ERR add_segment: infinite loop",f,a,this);return}if(!f.dL&&!f.dR){console.log("ERR add_segment: missing successors",f,a,this);return}g=f.sink;g.nodetype=
PNLTRI.T_X;g.seg=a;g.trap=null;n=p=!0;r&&r.rseg==f.rseg?(p=!1,m=f,l=r,l.vLow=f.vLow,g.right=r.sink,g.left=new PNLTRI.QsNode(m)):s&&s.lseg==f.lseg?(n=!1,l=f,m=s,m.vLow=f.vLow,g.left=s.sink,g.right=new PNLTRI.QsNode(l)):(m=f,l=this.cloneTrap(f),g.right=new PNLTRI.QsNode(l),g.left=new PNLTRI.QsNode(m));f.uL&&f.uR?f.usave?(f.uside==PNLTRI.S_LEFT?(l.setAbove(f.uR,f.usave),l.uL.setBelow(l,null),l.uR.setBelow(null,l)):(m.setAbove(f.usave,f.uL),m.uL.setBelow(m,null),m.uR.setBelow(null,m)),m.usave=l.usave=
null):f.vHigh==k.vHigh?(l.setAbove(null,f.uR),l.uR.setBelow(null,l),m.setAbove(f.uL,null)):(p&&(l.setAbove(f.uR,null),l.uL.setBelow(l,l.uL.dR)),n&&m.setAbove(null,f.uL)):b();f.dL&&f.dR?n=d():(n=f.dL?f.dL:f.dR,c(n));m.rseg&&(m.rseg.trLeft=l);l.lseg&&(l.lseg.trRight=m);m.rseg=l.lseg=a;a.trLeft=m;a.trRight=l;f.vLow!=u.vLow?(s=m,r=l,f=n):f=null}a.is_inserted=!0}else console.log("ERR add_segment: missing trFirst.uX: ",k)},assignDepths:function(a){var b=[this.trapArray[0]],c=[],d,e,h=0;do{for(var g=1==
h%2;d=b.pop();)-1==d.depth&&(d.depth=h,d.uL&&b.push(d.uL),d.uR&&b.push(d.uR),d.dL&&b.push(d.dL),d.dR&&b.push(d.dR),(e=d.lseg)&&-1==e.trLeft.depth&&c.push(e.trLeft),(e=d.rseg)&&-1==e.trRight.depth&&(c.push(e.trRight),e.upward!=g&&a.reverse_polygon_chain(e)));b=c;c=[];h++}while(0<b.length)},find_first_inside:function(){for(var a,b=0,c=this.trapArray.length;b<c;b++)if(a=this.trapArray[b],1==a.depth%2&&!a.monoDiag&&(!a.uL&&!a.uR||!a.dL&&!a.dR))return a;return null}};
PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,find_first_inside:function(){return this.queryStructure.find_first_inside()},math_logstar_n:function(a){var b;for(b=0;1<=a;b++)a=PNLTRI.Math.log2(a);return b-1},math_NH:function(a,b){var c,d;c=0;for(d=a;c<b;c++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)},optimise_randomlist:function(a){var b=0,c=this.polyData.nbPolyChains();if(1!=c)for(var d=Array(c),e=a.concat(),h=0;h<e.length;h++){var g=e[h].chainId;d[g]?a[c++]=e[h]:(a[b++]=e[h],d[g]=
!0)}},find_new_roots:function(a){a.is_inserted||(a.rootFrom=this.queryStructure.ptNode(a.vFrom,a.vTo,a.rootFrom),a.rootTo=this.queryStructure.ptNode(a.vTo,a.vFrom,a.rootTo))},trapezoide_polygon:function(){var a=this.polyData.getSegments().concat();PNLTRI.Math.array_shuffle(a);this.optimise_randomlist(a);var b=a.length,c=this.queryStructure,d,e,h=this.math_logstar_n(b);for(e=1;e<=h;e++){for(d=this.math_NH(b,e-1);d<this.math_NH(b,e);d++)c.add_segment(a[d-1]);for(d=0;d<b;d++)this.find_new_roots(a[d])}for(d=
this.math_NH(b,h);d<=b;d++)c.add_segment(a[d-1]);c.assignDepths(this.polyData)}};PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.trapezoider.trapezoide_polygon();this.startTrap=this.trapezoider.find_first_inside();this.polyData.initMonoChains();for(var a=0,b=this.startTrap;b;)if(this.polyData.monoSubPolyChains[a]=b.lseg,this.alyTrap(a,b,null,null,null),b=this.trapezoider.find_first_inside())a=this.polyData.monoSubPolyChains.length;return this.polyData.normalize_monotone_chains()},
doSplit:function(a,b,c,d){return this.polyData.splitPolygonChain(a,b,c,d)},alyTrap:function(a,b,c,d,e){function h(){var a;return(a=g.pop())?(k=a[0],n=a[1],p=a[2],q=a[3],!0):!1}var g=[],k,n,p,q,u;null==c&&(d=!0,b.uL?c=!0:b.dL?c=!1:(d=!1,c=b.uR?!0:!1));for(b&&g.push([b,c,d,a]);h();)if(!k.monoDiag){if(!k.lseg||!k.rseg)return console.log("ERR alyTrap: lseg/rseg missing",k),g;n?p?(a=k.uL,b=k.uR,c=k.dL,d=k.dR):(a=k.uR,b=k.uL,c=k.dR,d=k.dL):p?(a=k.dL,b=k.dR,c=k.uL,d=k.uR):(a=k.dR,b=k.dL,c=k.uR,d=k.uL);if(b||
d)u=this.doSplit(q,k.vLow,k.vHigh,p);d&&g.push([d,n,!p,u]);b&&g.push([b,!n,!p,u]);c&&g.push([c,n,p,q]);c||d||a&&g.push([a,!n,p,q]);k.monoDiag=!0;if(e)return g}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var b=0;b<a.length;b++){var c=a[b],d=c.mprev,e=c.mnext;e.mnext==d?this.polyData.addTriangle(c.vFrom,e.vFrom,d.vFrom):this.triangulate_monotone_polygon(c)}},triangulate_monotone_polygon:function(a){var b=a.mnext;a=a.vFrom;var c=[b.vFrom],d=0,b=b.mnext,e=b.vFrom;if(e!=a){for(;e!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(e,
c[d-1],c[d]))this.polyData.addTriangle(c[d-1],c[d],e),d--;else if(c[++d]=e,e==a)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<d;)d--,this.polyData.addTriangle(c[d-1],c[d],c[d+1]);else b=b.mnext,e=b.vFrom;else c[++d]=e,b=b.mnext,e=b.vFrom;this.polyData.addTriangle(c[d-1],c[d],e)}}};PNLTRI.Triangulator=function(){this.lastPolyData=null};
PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,clear_lastData:function(){this.lastPolyData=null},get_PolyLeftArr:function(){return this.lastPolyData?this.lastPolyData.get_PolyLeftArr():null},triangulate_polygon:function(a,b){if(!a||0==a.length)return[];var c=new PNLTRI.PolygonData(a),d;d=b?!1:1==c.nbPolyChains();d&&(d=new PNLTRI.EarClipTriangulator(c),d=d.triangulate_polygon_no_holes());d||((new PNLTRI.MonoSplitter(c)).monotonate_trapezoids(),d=new PNLTRI.MonoTriangulator(c),d.triangulate_all_polygons());
this.lastPolyData=c;return c.getTriangles()}};
